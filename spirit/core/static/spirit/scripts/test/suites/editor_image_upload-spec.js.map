{"version":3,"file":"editor_image_upload-spec.js","sources":["editor_image_upload-spec.coffee"],"names":[],"mappings":"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","sourcesContent":["describe \"editor image upload plugin tests\", ->\n    textarea = null\n    editorImageUpload = null\n    data = null\n    inputFile = null\n    file = null\n    post = null\n\n    beforeEach ->\n        fixtures = do jasmine.getFixtures\n        fixtures.fixturesPath = 'base/test/fixtures/'\n        loadFixtures 'editor.html'\n\n        post = spyOn $, 'ajax'\n        post.and.callFake (req) ->\n            d = $.Deferred()\n            d.resolve(data)  # success\n            #d.reject()  # failure\n            return d.promise()\n\n        data =\n            url: \"/path/image.jpg\"\n        file =\n            name: \"foo.jpg\"\n\n        textarea = $('#id_comment').editor_image_upload {\n            csrfToken: \"foo csrf_token\",\n            target: \"/foo/\",\n            placeholderText: \"foo uploading {name}\"\n        }\n        editorImageUpload = textarea.first().data 'plugin_editor_image_upload'\n        inputFile = editorImageUpload.inputFile\n\n    it \"doesnt break selector chaining\", ->\n        expect(textarea).toEqual $('#id_comment')\n        expect(textarea.length).toEqual 1\n\n    it \"does nothing if the browser is not supported\", ->\n        org_formData = window.FormData\n        window.FormData = null\n        try\n            # remove event from beforeEach editor to prevent popup\n            $(\".js-box-image\").off 'click'\n\n            textarea2 = $('#id_comment2').editor_image_upload()\n            inputFile2 = textarea2.data('plugin_editor_image_upload').inputFile\n\n            trigger = spyOn inputFile2, 'trigger'\n            $(\".js-box-image\").trigger 'click'\n            expect(trigger).not.toHaveBeenCalled()\n        finally\n            window.FormData = org_formData\n\n    it \"opens the file choose dialog\", ->\n        trigger = spyOn inputFile, 'trigger'\n        $(\".js-box-image\").trigger 'click'\n        expect(trigger).toHaveBeenCalled()\n\n    it \"uploads the image\", ->\n        expect($.ajax.calls.any()).toEqual false\n\n        formDataMock = jasmine.createSpyObj('formDataMock', ['append', ])\n        spyOn(window, \"FormData\").and.returnValue formDataMock\n        spyOn(inputFile, 'get').and.returnValue {files: [file, ]}\n        inputFile.trigger 'change'\n        expect($.ajax.calls.any()).toEqual true\n        expect($.ajax.calls.argsFor(0)).toEqual [ { url: '/foo/', data: formDataMock, processData: false, contentType: false, type: 'POST' } ]\n        expect(formDataMock.append).toHaveBeenCalledWith('csrfmiddlewaretoken', 'foo csrf_token')\n        expect(formDataMock.append).toHaveBeenCalledWith('image', { name : 'foo.jpg' })\n\n    it \"adds the placeholder\", ->\n        textarea.val \"foobar\"\n\n        post.and.callFake (req) ->\n            expect(textarea.val()).toEqual \"foobar![foo uploading foo.jpg]()\"\n\n            d = $.Deferred()\n            d.resolve(data)\n            return d.promise()\n\n        spyOn(inputFile, 'get').and.returnValue {files: [file, ]}\n        inputFile.trigger 'change'\n\n    it \"changes the placeholder on upload success\", ->\n        textarea.val \"foobar\"\n\n        spyOn(inputFile, 'get').and.returnValue {files: [file, ]}\n        inputFile.trigger 'change'\n        expect(textarea.val()).toEqual \"foobar![foo.jpg](/path/image.jpg)\"\n\n    it \"changes the placeholder on upload error\", ->\n        textarea.val \"foobar\"\n\n        data =\n            error: {foo: \"foo error\", }\n\n        spyOn(inputFile, 'get').and.returnValue {files: [file, ]}\n        inputFile.trigger 'change'\n        expect(textarea.val()).toEqual \"foobar![{\\\"error\\\":{\\\"foo\\\":\\\"foo error\\\"}}]()\"\n\n    it \"changes the placeholder on upload failure\", ->\n        textarea.val \"foobar\"\n\n        d = $.Deferred()\n        post.and.callFake (req) ->\n            d.reject(null, \"foo statusError\", \"bar error\")  # failure\n            return d.promise()\n\n        spyOn(inputFile, 'get').and.returnValue {files: [file, ]}\n        inputFile.trigger 'change'\n        expect(textarea.val()).toEqual \"foobar![error: foo statusError bar error]()\"\n"]}