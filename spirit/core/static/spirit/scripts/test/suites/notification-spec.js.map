{"version":3,"file":"notification-spec.js","sources":["notification-spec.coffee"],"names":[],"mappings":"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","sourcesContent":["describe \"notification plugin tests\", ->\n    tab = null\n    notification = null\n    Notification = null\n    get = null\n    data = null\n\n    beforeEach ->\n        fixtures = do jasmine.getFixtures\n        fixtures.fixturesPath = 'base/test/fixtures/'\n        loadFixtures 'notification.html'\n\n        get = spyOn $, 'getJSON'\n        get.and.callFake (req) ->\n            d = $.Deferred()\n            d.resolve(data)  # success\n            #d.reject()  # failure\n            return d.promise()\n\n        data =\n            n: [{\n                user: \"username\",\n                action: 1,\n                title: \"title\",\n                url: \"/foobar/\",\n                is_read: true\n            }]\n\n        tab = $.notification {\n            notificationUrl: \"/foo/\",\n            notificationListUrl: \"/foo/list/\",\n            mentionTxt: \"{user} foo you on {topic}\",\n            commentTxt: \"{user} has bar on {topic}\",\n            showAll: \"foo Show all\",\n            empty: \"foo empty\",\n            unread: \"foo unread\"\n        }\n        notification = tab.first().data 'plugin_notification'\n        Notification = $.notification.Notification\n\n    it \"doesnt break selector chaining\", ->\n        expect(tab).toEqual $('.js-tab-notification')\n\n    it \"gets the notifications\", ->\n        expect(get.calls.any()).toEqual false\n\n        tab.first().trigger \"click\"\n        expect(get.calls.any()).toEqual true\n        expect(get.calls.count()).toEqual 1\n        expect(get.calls.argsFor(0)).toEqual ['/foo/']\n\n        # making multiple clicks do nothing\n        tab.first().trigger \"click\"\n        expect(get.calls.count()).toEqual 1\n\n    it \"shows the notifications, mentions\", ->\n        tab.first().trigger \"click\"\n        expect(get.calls.any()).toEqual true\n        expect($(\".js-notifications-content\").html()).toEqual '<div>username foo you on <a href=\"/foobar/\">title</a></div><div><a href=\"/foo/list/\">foo Show all</a></div>'\n\n    it \"shows the notifications, comments\", ->\n        data.n[0].action = 2\n\n        tab.first().trigger \"click\"\n        expect(get.calls.any()).toEqual true\n        expect($(\".js-notifications-content\").html()).toEqual '<div>username has bar on <a href=\"/foobar/\">title</a></div><div><a href=\"/foo/list/\">foo Show all</a></div>'\n\n    it \"shows the notifications, unread\", ->\n        data.n[0].is_read = false\n\n        tab.first().trigger \"click\"\n        expect(get.calls.any()).toEqual true\n        expect($(\".js-notifications-content\").html()).toEqual '<div>username foo you on <a href=\"/foobar/\">title</a> <span class=\"row-unread\">foo unread</span></div><div><a href=\"/foo/list/\">foo Show all</a></div>'\n\n    it \"shows the notifications, error\", ->\n        get.and.callFake (req) ->\n            d = $.Deferred()\n            d.reject(\"foobar\", \"200\", \"foo error\")  # failure\n            return d.promise()\n\n        tab.first().trigger \"click\"\n        expect(get.calls.any()).toEqual true\n        expect($(\".js-notifications-content\").html()).toEqual '<div>Error: 200, foo error</div>'\n\n    it \"shows tab content and is selected on click\", ->\n        expect(tab.first().hasClass \"is-selected\").toEqual false\n        expect($(\".js-notifications-content\").is \":visible\").toEqual false\n\n        tab.first().trigger \"click\"\n        expect(tab.first().hasClass \"is-selected\").toEqual true\n        expect($(\".js-notifications-content\").is \":visible\").toEqual true\n\n    it \"prevents the default click behaviour\", ->\n        event = {type: 'click', stopPropagation: (->), preventDefault: (->)}\n        stopPropagation = spyOn event, 'stopPropagation'\n        preventDefault = spyOn event, 'preventDefault'\n\n        tab.first().trigger event\n        expect(stopPropagation).toHaveBeenCalled()\n        expect(preventDefault).toHaveBeenCalled()\n"]}