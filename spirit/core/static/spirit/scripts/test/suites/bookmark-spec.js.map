{"version":3,"file":"bookmark-spec.js","sources":["bookmark-spec.coffee"],"names":[],"mappings":"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","sourcesContent":["describe \"bookmark plugin tests\", ->\n    comments = null\n    mark = null\n    Bookmark = null\n    Mark = null\n    post = null\n\n    beforeEach ->\n        fixtures = do jasmine.getFixtures\n        fixtures.fixturesPath = 'base/test/fixtures/'\n        loadFixtures 'bookmark.html'\n\n        post = spyOn $, 'post'\n        post.and.callFake (req) ->\n            d = $.Deferred()\n            d.resolve()  # success\n            #d.reject(data)  # failure\n            return d.promise()\n\n        comments = $('.comment').bookmark {csrfToken: \"foobar\", target: \"/foo/\"}\n        mark = comments.first().data('plugin_bookmark').mark\n        Bookmark = $.fn.bookmark.Bookmark\n        Mark = $.fn.bookmark.Mark\n\n    it \"doesnt break selector chaining\", ->\n        expect(comments).toEqual $('.comment')\n        expect(comments.length).toEqual 2\n\n    it \"sends the first comment number\", ->\n        expect($.post.calls.any()).toEqual true\n        expect($.post.calls.argsFor(0)).toEqual([\n            '/foo/',\n            {csrfmiddlewaretoken: \"foobar\", comment_number: 1}\n        ])\n\n    it \"stores the last comment number\", ->\n        bookmark = comments.first().data 'plugin_bookmark'\n        expect(bookmark.mark.commentNumber).toEqual 2\n\n    it \"stores the same mark in every comment\", ->\n        bookmark_1 = comments.first().data 'plugin_bookmark'\n        bookmark_2 = comments.last().data 'plugin_bookmark'\n        expect(bookmark_1.mark).toEqual bookmark_2.mark\n\n    it \"does not post on scroll up\", ->\n        bookmark_1 = comments.first().data 'plugin_bookmark'\n        sendCommentNumber = spyOn bookmark_1, 'sendCommentNumber'\n        bookmark_1.onWaypoint()\n        expect(mark.commentNumber).toEqual 2\n        expect(sendCommentNumber).not.toHaveBeenCalled()\n\n    it \"does post on scroll down\", ->\n        comments.last().data 'number', 999\n        bookmark_2 = comments.last().data 'plugin_bookmark'\n        sendCommentNumber = spyOn bookmark_2, 'sendCommentNumber'\n        bookmark_2.onWaypoint()\n        expect(mark.commentNumber).toEqual 999\n        expect(sendCommentNumber).toHaveBeenCalled()\n\n    it \"gets the comment number from the address bar\", ->\n        org_location_hash = window.location.hash\n        window.location.hash = \"\"\n        try\n            window.location.hash = \"http://example.com/foo/#c5\"\n            newMark = new Mark()\n            # it substract 1 from the real comment number\n            expect(newMark.commentNumber).toEqual 4\n\n            window.location.hash = \"http://example.com/foo/\"\n            newMark = new Mark()\n            expect(newMark.commentNumber).toEqual 0\n\n            window.location.hash = \"http://example.com/foo/#foobar5\"\n            newMark = new Mark()\n            expect(newMark.commentNumber).toEqual 0\n        finally\n            window.location.hash = org_location_hash\n\n    it \"sends only one comment number in a given time\", ->\n        post.calls.reset()\n        expect($.post.calls.any()).toEqual false\n\n        # won't post if already sending\n        bookmark_2 = comments.last().data 'plugin_bookmark'\n        mark.isSending = true\n        bookmark_2.sendCommentNumber()\n        expect($.post.calls.any()).toEqual false\n\n        # will prevent from others to post\n        d = $.Deferred()\n        post.and.callFake (req) =>\n            d.resolve()\n            return d.promise()\n\n        always = spyOn post(), 'always'\n        post.calls.reset()\n        mark.isSending = false\n        bookmark_2.sendCommentNumber()\n        expect($.post.calls.any()).toEqual true\n        expect(always.calls.any()).toEqual true\n        expect(mark.isSending).toEqual true\n\n    it \"sends current comment number after sending previous when current > previous\", ->\n        post.calls.reset()\n        expect($.post.calls.any()).toEqual false\n\n        d = $.Deferred()\n        post.and.callFake (req) =>\n            # d.resolve()\n            return d.promise()\n\n        mark.commentNumber = 1\n        bookmark_2 = comments.last().data 'plugin_bookmark'\n        bookmark_2.onWaypoint()\n        expect($.post.calls.count()).toEqual 1\n        expect($.post.calls.argsFor(0)).toEqual([\n            '/foo/',\n            {csrfmiddlewaretoken: \"foobar\", comment_number: 2}\n        ])\n\n        # Increase comment (scroll down) and resolve the previous request\n        mark.commentNumber++\n        d.resolve()\n        expect($.post.calls.count()).toEqual 2\n        expect($.post.calls.argsFor(1)).toEqual([\n            '/foo/',\n            {csrfmiddlewaretoken: \"foobar\", comment_number: 3}\n        ])\n\n        # It does not resend when current == previous\n        d.resolve()\n        expect($.post.calls.count()).toEqual 2\n"]}